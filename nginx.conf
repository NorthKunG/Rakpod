server {
    listen 80;
    listen [::]:80;
    server_name api-envy.adcm.co.th;

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api-envy.adcm.co.th;

    # Replace with your actual SSL certificate paths on the host machine
    # These paths will be mounted into the Nginx container
    ssl_certificate /etc/nginx/ssl/api-envy.adcm.co.th.crt;
    ssl_certificate_key /etc/nginx/ssl/api-envy.adcm.co.th.key;

    # Optional: If you have a chain file
    # ssl_trusted_certificate /etc/nginx/ssl/api-envy.adcm.co.th_chain.crt;

    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 5m;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Common security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "no-referrer-when-downgrade";

    # CORS Headers (Adjust 'Access-Control-Allow-Origin' to your frontend domain)
    # This is an example, you might need more specific headers depending on your API
    # Replace 'https://www.rakpod.adcm.co.th' with the actual origin of your frontend
    add_header 'Access-Control-Allow-Origin' 'https://www.rakpod.adcm.co.th' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    # Handle OPTIONS preflight requests for CORS
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }

    location / {
        # Proxy requests to your 'api' service within the Docker network
        # 'api' is the service name, '2542' is the internal port of your API container
        proxy_pass http://api:2542;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
    }
}